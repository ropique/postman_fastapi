{
	"info": {
		"_postman_id": "372a0f3b-34f5-4f29-9238-702fb3fb8786",
		"name": "myapi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create post",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMzMDgzNjl9.B2TngUYPRl3GTeKAHke5dpiRc_cwaEnMNYlVLkDBo1w",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMzMDYyOTh9.Wjlz9_eQFqmCG1VBuaUYNa-vj15uGxTi8fFCOrMS9Jo",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Quality Control\",\n    \"content\": \"Quality Control is about seeing whether the desired level of quality is being achieved (and if not, doing something about it).\",\n    \"category\": \"theory\"\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}posts",
					"host": [
						"{{website}}posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "get posts",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMzMDgzNjl9.B2TngUYPRl3GTeKAHke5dpiRc_cwaEnMNYlVLkDBo1w",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}posts",
					"host": [
						"{{website}}posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get one post",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMzMDgzNjl9.B2TngUYPRl3GTeKAHke5dpiRc_cwaEnMNYlVLkDBo1w",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{website}}posts/28",
					"host": [
						"{{website}}posts"
					],
					"path": [
						"28"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMyOTYyODN9.3hfcOhbX2f64MweQm_C1oXGc4mPSRIJS9m2XcCS-GE8",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{website}}posts/32",
					"host": [
						"{{website}}posts"
					],
					"path": [
						"32"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update post",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2NTMyOTYyODN9.3hfcOhbX2f64MweQm_C1oXGc4mPSRIJS9m2XcCS-GE8",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"CTFL\",\n    \"content\": \"Certified Tester Foundation Level\",\n    \"category\": \"abbreviations\"\n   \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}posts/97",
					"host": [
						"{{website}}posts"
					],
					"path": [
						"97"
					]
				}
			},
			"response": []
		},
		{
			"name": "New request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{website}}sqlalchemy",
					"host": [
						"{{website}}sqlalchemy"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"Anushfgfgerefdf@mail.com\",\n    \"password\": \"Test1234~\", \n    \"company\": \"Instigate mobile\"\n    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}users",
					"host": [
						"{{website}}users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user ",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}users/1",
					"host": [
						"{{website}}users"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "Anush@mail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Test1234~",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}/login",
					"host": [
						"{{website}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Vote",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"post_id\": 10,\n    \"dir\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{website}}vote",
					"host": [
						"{{website}}vote"
					]
				}
			},
			"response": []
		},
		{
			"name": "delate user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}